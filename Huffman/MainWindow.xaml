<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Huffman"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="Huffman.MainWindow"
        mc:Ignorable="d"
        Title="HuffmanCode" 
        Height="450" MinHeight="450" 
        Width="800" MinWidth="800"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip"
        Background="#181735" 
        Icon="Images/icon.ico" >
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style x:Key="ButtonStyleA" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="#0F0F20" BorderThickness="0">
                            <!-- <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect> -->
                            <ContentPresenter x:Name="cp" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              TextBlock.Foreground="LightGray"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#E0F2F1"/>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#202045"/>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#1e213d"/>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExitButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="exitButtonTemplate" TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="exitButtonEllipse" 
                                     Fill="#cc0000"
                                     Width="15"
                                     Height="15"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="exitButtonEllipse" Property="Fill" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="exitButtonEllipse" Property="Fill" Value="#ff0000" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="exitButtonTemplate" TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="exitButtonEllipse" 
                                     Fill="#5da130"
                                     Width="15"
                                     Height="15"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="exitButtonEllipse" Property="Fill" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="exitButtonEllipse" Property="Fill" Value="#8ccb5e" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="exitButtonTemplate" TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="exitButtonEllipse" 
                                     Fill="#fad201"
                                     Width="15"
                                     Height="15"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="exitButtonEllipse" Property="Fill" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="exitButtonEllipse" Property="Fill" Value="#ffff1f" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#11141a"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#2d333d"/>
            <Setter Property="Padding" Value="10,10,10,10"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="root" 
                              Height="{TemplateBinding Height}"
                              Width="{TemplateBinding Width}"
                              SnapsToDevicePixels="True">
                            <Border x:Name="Background"
                                    BorderThickness="0.5"
                                    CornerRadius="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}">

                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="false"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#b0b7c6"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF10578C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RichTextBoxStyle" TargetType="RichTextBox">
            <Setter Property="Background" Value="#11141a"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#2d333d"/>
            <Setter Property="Padding" Value="10,10,10,10"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RichTextBox">
                        <Grid x:Name="root" 
                              Height="{TemplateBinding Height}"
                              Width="{TemplateBinding Width}"
                              SnapsToDevicePixels="True">
                            <Border x:Name="Background"
                                    BorderThickness="0.5"
                                    CornerRadius="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}">

                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="false"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#b0b7c6"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF10578C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="15*"/>
            <RowDefinition Height="385*"/>
            <RowDefinition Height="15*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="500*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="15*"/>
        </Grid.ColumnDefinitions>

        <!-- Меню -->
        <Grid Background="#0F0F20"
              Grid.ColumnSpan="6"
              MouseDown="Grid_MouseDown">

            <Grid.Effect>
                <DropShadowEffect BlurRadius="7"
                                  Direction="330"
                                  Color="Black" 
                                  ShadowDepth="4" 
                                  Opacity="0.3"/>
            </Grid.Effect>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="26*"/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="22*"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="HuffmanCode"
                       Foreground="White"
                       Grid.Column="1"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontFamily="Fonts/#Dosis"
                       FontWeight="Medium"
                       FontSize="16"
                       />

            <Button Grid.Column="3"
                    Style="{StaticResource ButtonStyleA}" Click="OpenText_Button">
                <TextBlock Text="Open text"
                       Foreground="LightGray"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontFamily="Fonts/#Dosis"
                       FontSize="14"
                       />
            </Button>

            <Button Grid.Column="4"
                    Style="{StaticResource ButtonStyleA}" Click="CodeText_Button">
                <TextBlock Text="Code"
                       Foreground="LightGray"
                       Grid.Column="3"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontFamily="Fonts/#Dosis"
                       FontSize="14"
                       />
            </Button>

            <Button Grid.Column="5"
                    Style="{StaticResource ButtonStyleA}" Click="DeCodeText_Button">
                <TextBlock Text="DeCode"
                       Foreground="LightGray"
                       Grid.Column="4"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontFamily="Fonts/#Dosis"
                       FontSize="14"
                       />
            </Button>

            <Button Grid.Column="6"
                    Style="{StaticResource ButtonStyleA}" Click="ClearAll_Button">
                <TextBlock Text="Clear all"
                       Foreground="LightGray"
                       Grid.Column="4"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontFamily="Fonts/#Dosis"
                       FontSize="14"
                       />
            </Button>

            <Button Grid.Column="8"
                    Style="{StaticResource MinimizeButton}" 
                    Click="MinimizeFrame"/>

            <Button Grid.Column="9"
                    Style="{StaticResource MaximizeButton}" 
                    Click="MaximizeFrame"/>

            <Button Grid.Column="10"
                    Style="{StaticResource ExitButton}" 
                    Click="CloseAppClick"/>
        </Grid>

        <!-- Два текстовых поля для теста и его закодированной версии -->
        <Grid Grid.Column="1" 
              Grid.Row="2">

            <Grid.RowDefinitions>
                <RowDefinition Height="182.5*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="182.5*"/>
            </Grid.RowDefinitions>

            <TextBox x:Name="textToAnalyze"
                     Grid.Row="0"
                     Style="{StaticResource TextBoxStyle}" 
                     IsReadOnly = "False"
                     TextWrapping="Wrap"/>

            <TextBox x:Name="textInCoding"
                     Grid.Row="3"
                     IsReadOnly="False"
                     Style="{StaticResource TextBoxStyle}"
                     TextWrapping="Wrap">
               
            </TextBox>




        </Grid>

        <!-- Частотный словарь -->
        <Grid Grid.Column="4"
              Grid.Row="2">

            <Grid.RowDefinitions>
                <RowDefinition Height="25*"/>
                <RowDefinition Height="360*"/>
            </Grid.RowDefinitions>

            <Viewbox Grid.Row="0">
                <TextBlock Text="Frequency Dictionary"
                       Foreground="White"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontFamily="Fonts/#Dosis"
                           Padding="0,0,0,4"
                       />
            </Viewbox>

            <ListBox x:Name="frequencyDictionaryListBox"
                 Grid.Row="2"
                 Grid.Column="4"
                 Background="#FF11141A"
                 BorderBrush="#2d333d"
                 BorderThickness="0.5"
                 Foreground="White" 
                 ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="brd" 
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <TextBlock Margin="{TemplateBinding Padding}" 
                                               Foreground="{TemplateBinding Foreground}"
                                               FontSize="12">
                                        <ContentPresenter/>
                                        </TextBlock>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#181735"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0.5"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        
    </Grid>
</Window>
